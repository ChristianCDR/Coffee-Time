services:
  rabbitmq: 
    image: rabbitmq:4.0-management
    container_name: coffee-rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    volumes:
      - ./rabbitmq/data:/var/lib/rabbitmq/mnesia
      - ./rabbitmq/logs:/var/log/rabbitmq
      - ./rabbitmq/config:/etc/rabbitmq
    networks:
      - coffee-network
      
  mercure-server:
    image: dunglas/mercure
    container_name: coffee-mercure
    restart: always
    ports:
      - "8081:80"
    depends_on:
      - rabbitmq
    environment:
      MERCURE_URL: ${MERCURE_URL}
      MERCURE_PUBLIC_URL: ${MERCURE_PUBLIC_URL}
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_KEY}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_KEY}
      MERCURE_ALLOW_ANONYMOUS: '1'
      MERCURE_CORS_ALLOWED_ORIGINS: 'http://localhost:3000'
    volumes:
      - mercure_data:/data
      - mercure_config:/config
      - ./mercure/Caddyfile:/etc/caddy/Caddyfile
    networks:
      - coffee-network

  ###> PHP ###
  php:
    build:
      context: ../back
      dockerfile: Dockerfile
    container_name: coffee-php
    restart: always
    volumes:
      - ../back:/var/www/html
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - rabbitmq
      - mercure-server
    command: bash -c "php bin/console doctrine:migrations:migrate --no-interaction && php-fpm"
    environment:
      - MESSENGER_TRANSPORT_DSN=${MESSENGER_TRANSPORT_DSN}
      - MERCURE_URL=${MERCURE_URL}
      - MERCURE_PUBLIC_URL=${MERCURE_PUBLIC_URL}
      - DATABASE_URL=pgsql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
    networks:
      - coffee-network

  ###> Server Nginx ###
  nginx:
    image: nginx:latest
    container_name: coffee-nginx
    restart: always
    ports:
      - "8001:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - coffee-network
  
  message-consumer:
    build:
      context: ../back
      dockerfile: Dockerfile
    container_name: coffee-message-consumer
    restart: always
    depends_on:
      - rabbitmq
      - php
    environment:
      - MESSENGER_TRANSPORT_DSN=${MESSENGER_TRANSPORT_DSN}
    command: php bin/console messenger:consume async -vv
    networks:
      - coffee-network

  front:
    build:
      context: ../front
      dockerfile: Dockerfile
    container_name: coffee-front
    restart: always
    ports:
      - "3000:3000"
    environment:
      MERCURE_PUBLIC_URL: ${MERCURE_PUBLIC_URL}
    volumes:
      - ../front:/app
    networks:
      - coffee-network

  database:
    image: postgres:17-bookworm
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}     
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - coffee-network

volumes:
  rabbitmq:
  postgres_data:
  mercure_data:
  mercure_config:

networks:
  coffee-network:
    driver: bridge